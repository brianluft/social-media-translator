# Translate Video Subtitles iOS App

iOS app to translate burned-in video subtitles to user's preferred language.

## Features
- Import videos from photo library
- GPU-accelerated subtitle detection
- Translation using Apple's API
- Overlay translated subtitles during playback

## Core Components

- **SubtitleDetector**
   - Vision + Metal for GPU-accelerated OCR with rectangle detection
   - Text segment classification and tracking
   - Outputs FrameSegments list with position data
   - Progress reporting during detection

- **TranslationService**
   - Apple Translation framework
   - Batch processing of text segments
   - Maintains segment positions and types
   - Progress reporting

- **VideoPlayerController**
   - AVKit player with multi-segment overlay support
   - Basic playback controls

- **SubtitleOverlayRenderer**
   - Core Animation/Text for multi-segment display
   - Position-aware rendering
   - Style management per segment type

## Data Models

1. **TextSegment**
   - Text content and position
   - Segment type (subtitle, username, UI element)
   - Confidence score from OCR
   - Rectangle in normalized coordinates

2. **FrameSegments**
   - Timestamp
   - Collection of TextSegments for the frame

3. **TranslatedSegment**
   - Original TextSegment reference
   - Translated text
   - Preserved position and styling

## Workflow
1. Select video â†’ VideoManager loads
2. SubtitleDetector processes video
3. TranslationService translates all subtitles
4. Play video with translated overlays
5. Use delegates for progress updates 

## Building

`./build.sh` will clean, format, test, and build.

ALWAYS run the build before returning control to me.

The build prints "===SUCCESS===" at the end if it succeeds.
If you don't see "===SUCCESS===", then the build script was NOT successful!

## Debugging

If you need any documentation, ask me, and I will provide it.
Apple has extensive documentation on all APIs.
If you run into compiler errors, don't guess, instead ask me for the relevant documentation.

I can use the Xcode IDE and debugger, but you'll have to tell me what to do.
If an action is best performed in the UI, let me do it.

## Verification

Refer to me as "boss" so I know you've read this.
